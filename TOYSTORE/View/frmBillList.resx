<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Time.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Customer.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Type.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvdel.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvprint.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>